<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[Maven 引入 Spring 依赖的最佳方法]]></title>
      <url>%2F2017%2F01%2F11%2Fthe-best-way-to-add-spring-dependency-with-maven%2F</url>
      <content type="text"><![CDATA[在用 Spring 开发项目的时候，需要引入 Spring 的多个依赖。 通常的做法123456789101112&lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-web&lt;/artifactId&gt; &lt;version&gt;4.3.5.RELEASE&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt; &lt;version&gt;4.3.5.RELEASE&lt;/version&gt; &lt;/dependency&gt;&lt;/dependencies&gt; 为了不重复，也会把 version 里面的版本号换成一个变量，比如： 123&lt;properties&gt; &lt;spring.version&gt;4.3.5.RELEASE&lt;/spring.version&gt;&lt;/properties&gt; 其实 Spring 官方还有更好的方法。 Spring Framework 的官方参考文档是怎么做的？Spring Framework 的官方参考文档中有一小节—— Maven “Bill Of Materials” Dependency（翻译成中文就是”Maven 物料清单依赖”），能够解决你在项目中可能因为引入不同版本 Spring JARs 而导致的问题。 首先在 pom.xml 加入以下代码； 1234567891011&lt;dependencyManagement&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-framework-bom&lt;/artifactId&gt; &lt;version&gt;4.3.5.RELEASE&lt;/version&gt; &lt;type&gt;pom&lt;/type&gt; &lt;scope&gt;import&lt;/scope&gt; &lt;/dependency&gt; &lt;/dependencies&gt;&lt;/dependencyManagement&gt; 不需要 &lt;version&gt; 标签就能引入 Spring JARs，版本号和上面的一样； 12345678910&lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-context&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-web&lt;/artifactId&gt; &lt;/dependency&gt;&lt;dependencies&gt; 进一步观察 第一个步骤是用了 Maven 的 &lt;dependencyManagement&gt; 标签，它能够让整个项目引入的依赖与 &lt;dependencyManagement&gt; 标签里面的依赖版本一致，这也是为什么之后引入 spring 相关的依赖不需要加入 &lt;version&gt; 属性了； spring-framework-bom 的 type 是 pom，查看这个项目的 pom.xml 文件 ，会发现里面也是 &lt;dependencyManagement&gt; 标签，下面指定了一系列 spring 依赖的版本号； 123456789101112131415&lt;dependencyManagement&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-context&lt;/artifactId&gt; &lt;version&gt;4.3.5.RELEASE&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-web&lt;/artifactId&gt; &lt;version&gt;4.3.5.RELEASE&lt;/version&gt; &lt;/dependency&gt; ... &lt;/dependencies&gt;&lt;/dependencyManagement&gt; 第一个步骤中 spring-framework-bom 的 scope 是 import； 发散一下，我们也可以做一个自己项目的”物料清单”，将常用的库比如说 commons-lang3、guava 这样的项目做成一个物料清单，然后以类似 spring 物料清单的方式引入到别的项目中，这样项目在加入 commons-lang3 这样的依赖的时候就不需要在加入 &lt;version&gt; 属性了； 导入 Spring 依赖完整的 pom.xml 文件12345678910111213141516171819202122232425262728293031323334353637383940&lt;project xmlns="..."&gt; ... &lt;properties&gt; &lt;spring.version&gt;4.2.8.RELEASE&lt;/spring.version&gt; &lt;/properties&gt; &lt;dependencyManagement&gt; &lt;dependencies&gt; &lt;!-- spring-framework 所有同版本的模块 import 进来 --&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-framework-bom&lt;/artifactId&gt; &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt; &lt;type&gt;pom&lt;/type&gt; &lt;scope&gt;import&lt;/scope&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;/dependencyManagement&gt; &lt;dependencies&gt; &lt;!-- spring --&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-context-support&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-test&lt;/artifactId&gt; &lt;scope&gt;test&lt;/scope&gt; &lt;/dependency&gt; &lt;/dependencies&gt;&lt;/project&gt;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2017%2F01%2F09%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
  
  
</search>
